// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiMaVeh.DataAccess.Model;

namespace SiMaVeh.DataAccess.Migrations
{
    [DbContext(typeof(SiMaVehContext))]
    [Migration("20201116195943_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SiMaVeh.DataAccess.Model.Relations.KitRepuesto", b =>
                {
                    b.Property<long>("KitId")
                        .HasColumnType("bigint");

                    b.Property<long>("RepuestoId")
                        .HasColumnType("bigint");

                    b.HasKey("KitId", "RepuestoId");

                    b.HasIndex("RepuestoId");

                    b.ToTable("KitRepuesto");
                });

            modelBuilder.Entity("SiMaVeh.DataAccess.Model.Relations.MarcaCategoriaMarca", b =>
                {
                    b.Property<long>("CategoriaMarcaId")
                        .HasColumnType("bigint");

                    b.Property<long>("MarcaId")
                        .HasColumnType("bigint");

                    b.HasKey("CategoriaMarcaId", "MarcaId");

                    b.HasIndex("MarcaId");

                    b.ToTable("MarcaCategoriaMarca");
                });

            modelBuilder.Entity("SiMaVeh.DataAccess.Model.Relations.ModeloVehiculoAceite", b =>
                {
                    b.Property<long>("AceiteId")
                        .HasColumnType("bigint");

                    b.Property<long>("ModeloVehiculoId")
                        .HasColumnType("bigint");

                    b.HasKey("AceiteId", "ModeloVehiculoId");

                    b.HasIndex("ModeloVehiculoId");

                    b.ToTable("ModeloVehiculoAceite");
                });

            modelBuilder.Entity("SiMaVeh.DataAccess.Model.Relations.ModeloVehiculoFuenteEnergia", b =>
                {
                    b.Property<long>("FuenteEnergiaId")
                        .HasColumnType("bigint");

                    b.Property<long>("ModeloVehiculoId")
                        .HasColumnType("bigint");

                    b.HasKey("FuenteEnergiaId", "ModeloVehiculoId");

                    b.HasIndex("ModeloVehiculoId");

                    b.ToTable("ModeloVehiculoFuenteEnergia");
                });

            modelBuilder.Entity("SiMaVeh.DataAccess.Model.Relations.ModeloVehiculoPresionNeumatico", b =>
                {
                    b.Property<long>("ModeloVehiculoId")
                        .HasColumnType("bigint");

                    b.Property<long>("PresionNeumaticoId")
                        .HasColumnType("bigint");

                    b.HasKey("ModeloVehiculoId", "PresionNeumaticoId");

                    b.HasIndex("PresionNeumaticoId");

                    b.ToTable("ModeloVehiculoPresionNeumatico");
                });

            modelBuilder.Entity("SiMaVeh.DataAccess.Model.Relations.ModeloVehiculoRepuesto", b =>
                {
                    b.Property<long>("ModeloVehiculoId")
                        .HasColumnType("bigint");

                    b.Property<long>("RepuestoId")
                        .HasColumnType("bigint");

                    b.HasKey("ModeloVehiculoId", "RepuestoId");

                    b.HasIndex("RepuestoId");

                    b.ToTable("ModeloVehiculoRepuesto");
                });

            modelBuilder.Entity("SiMaVeh.DataAccess.Model.Relations.ReparadorEntidadReparadora", b =>
                {
                    b.Property<long>("EntidadReparadoraId")
                        .HasColumnType("bigint");

                    b.Property<long>("ReparadorId")
                        .HasColumnType("bigint");

                    b.HasKey("EntidadReparadoraId", "ReparadorId");

                    b.HasIndex("ReparadorId");

                    b.ToTable("ReparadorEntidadReparadora");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.CategoriaMarca", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("CategoriasMarca");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Direccion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Calle")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long?>("LocalidadId")
                        .HasColumnType("bigint");

                    b.Property<int>("NumeroCalle")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocalidadId");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.EntidadReparadora", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("DireccionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long?>("TipoEntidadReparadoraId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DireccionId");

                    b.HasIndex("TipoEntidadReparadoraId");

                    b.ToTable("EntidadesReparadoras");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.EquipamientoAirbags", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<bool>("Acompanante")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Conductor")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("DelanteroDerecho")
                        .HasColumnType("int");

                    b.Property<int>("DelanteroIzquierdo")
                        .HasColumnType("int");

                    b.Property<int>("TraseroDerecho")
                        .HasColumnType("int");

                    b.Property<int>("TraseroIzquierdo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EquipamientosAirbags");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.FuenteEnergia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("MarcaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long?>("TipoFuenteEnergiaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("TipoFuenteEnergiaId");

                    b.ToTable("FuentesEnergia");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.GrupoModelo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("MarcaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("GruposModelo");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Localidad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("CPA")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long?>("PartidoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PartidoId");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Mantenimiento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Accion")
                        .HasColumnType("int");

                    b.Property<string>("MonedaMontoRecambioId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<decimal>("MontoRecambio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long?>("RecambioId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReparadorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ServicioReparadorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MonedaMontoRecambioId");

                    b.HasIndex("RecambioId");

                    b.HasIndex("ReparadorId");

                    b.HasIndex("ServicioReparadorId");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Marca", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.ModeloVehiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("AirbagsId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<long?>("GrupoModeloId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TipoFuenteEnergiaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Version")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("AirbagsId");

                    b.HasIndex("GrupoModeloId");

                    b.HasIndex("TipoFuenteEnergiaId");

                    b.ToTable("ModelosVehiculo");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Moneda", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Monedas");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Neumatico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("AnchuraSeccionalNominal")
                        .HasColumnType("int");

                    b.Property<int>("ConstruccionCarcasa")
                        .HasColumnType("int");

                    b.Property<int>("DiametroLLanta")
                        .HasColumnType("int");

                    b.Property<int>("IndiceCarga")
                        .HasColumnType("int");

                    b.Property<string>("IndiceVelocidad")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long?>("MarcaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("RelacionAnchoAlto")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Neumaticos");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Pais", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Partido", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long?>("ProvinciaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.PeriodicidadMantenimiento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Anios")
                        .HasColumnType("int");

                    b.Property<int>("Dias")
                        .HasColumnType("int");

                    b.Property<bool>("EsDefault")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("Kilometros")
                        .HasColumnType("bigint");

                    b.Property<int>("Meses")
                        .HasColumnType("int");

                    b.Property<long?>("ModeloVehiculoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RepuestoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ModeloVehiculoId");

                    b.HasIndex("RepuestoId");

                    b.ToTable("PeriodicidadesMantenimiento");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Persona", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long?>("TipoDocumentoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.PresionNeumatico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("NeumaticoId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RuedasDelanteras")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("RuedasTraseras")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("VehiculoCargado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("NeumaticoId");

                    b.ToTable("PresionesNeumaticos");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Provincia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long?>("PaisId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Recambio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("MarcaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Recambios");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.ServicioReparador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("EntidadReparadoraId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("KilometrajeVehiculo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("MonedaMontoManoObraId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<decimal>("MontoManoObra")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long?>("VehiculoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EntidadReparadoraId");

                    b.HasIndex("MonedaMontoManoObraId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("ServiciosReparadores");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.TargetMantenimiento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("TargetsMantenimiento");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Telefono", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<long?>("PersonaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TipoTelefonoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TipoTelefonoId");

                    b.ToTable("Telefonos");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.TipoCambio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<decimal>("CoeficienteCambio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MonedaDestinoId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("MonedaOrigenId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("MonedaDestinoId");

                    b.HasIndex("MonedaOrigenId");

                    b.ToTable("TiposCambio");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.TipoDocumento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("TiposDocumento");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.TipoEntidadReparadora", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("TiposEntidadReparadora");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.TipoFuenteEnergia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("TiposFuenteEnergia");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.TipoTelefono", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("TiposTelefono");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.UbicacionPieza", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<bool>("Izquierda")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Superior")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("UbicacionesPieza");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Vehiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("AnioFabricacion")
                        .HasColumnType("int");

                    b.Property<decimal>("Kilometraje")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long?>("ModeloVehiculoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ModeloVehiculoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Reparador", b =>
                {
                    b.HasBaseType("SiMaVeh.Domain.Models.Persona");

                    b.ToTable("Reparadores");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Usuario", b =>
                {
                    b.HasBaseType("SiMaVeh.Domain.Models.Persona");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Kit", b =>
                {
                    b.HasBaseType("SiMaVeh.Domain.Models.Recambio");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.ToTable("Kits");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Repuesto", b =>
                {
                    b.HasBaseType("SiMaVeh.Domain.Models.Recambio");

                    b.Property<string>("CodigoIdentificador")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long?>("TargetMantenimientoId")
                        .HasColumnType("bigint");

                    b.HasIndex("TargetMantenimientoId");

                    b.ToTable("Repuestos");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Aceite", b =>
                {
                    b.HasBaseType("SiMaVeh.Domain.Models.TargetMantenimiento");

                    b.Property<int>("ViscosidadSAEAltaTemperatura")
                        .HasColumnType("int");

                    b.Property<int>("ViscosidadSAEBajaTemperatura")
                        .HasColumnType("int");

                    b.ToTable("Aceites");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Fluido", b =>
                {
                    b.HasBaseType("SiMaVeh.Domain.Models.TargetMantenimiento");

                    b.ToTable("Fluidos");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Pieza", b =>
                {
                    b.HasBaseType("SiMaVeh.Domain.Models.TargetMantenimiento");

                    b.Property<string>("UbicacionPiezaId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasIndex("UbicacionPiezaId");

                    b.ToTable("Piezas");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Automovil", b =>
                {
                    b.HasBaseType("SiMaVeh.Domain.Models.Vehiculo");

                    b.Property<string>("CodigoColorPintura")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NumeroChasis")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Patente")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.ToTable("Automoviles");
                });

            modelBuilder.Entity("SiMaVeh.DataAccess.Model.Relations.KitRepuesto", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Kit", "Kit")
                        .WithMany()
                        .HasForeignKey("KitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiMaVeh.Domain.Models.Repuesto", "Repuesto")
                        .WithMany()
                        .HasForeignKey("RepuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kit");

                    b.Navigation("Repuesto");
                });

            modelBuilder.Entity("SiMaVeh.DataAccess.Model.Relations.MarcaCategoriaMarca", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.CategoriaMarca", "CategoriaMarca")
                        .WithMany()
                        .HasForeignKey("CategoriaMarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiMaVeh.Domain.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaMarca");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("SiMaVeh.DataAccess.Model.Relations.ModeloVehiculoAceite", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Aceite", "Aceite")
                        .WithMany()
                        .HasForeignKey("AceiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiMaVeh.Domain.Models.ModeloVehiculo", "ModeloVehiculo")
                        .WithMany()
                        .HasForeignKey("ModeloVehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aceite");

                    b.Navigation("ModeloVehiculo");
                });

            modelBuilder.Entity("SiMaVeh.DataAccess.Model.Relations.ModeloVehiculoFuenteEnergia", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.FuenteEnergia", "FuenteEnergia")
                        .WithMany()
                        .HasForeignKey("FuenteEnergiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiMaVeh.Domain.Models.ModeloVehiculo", "ModeloVehiculo")
                        .WithMany()
                        .HasForeignKey("ModeloVehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FuenteEnergia");

                    b.Navigation("ModeloVehiculo");
                });

            modelBuilder.Entity("SiMaVeh.DataAccess.Model.Relations.ModeloVehiculoPresionNeumatico", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.ModeloVehiculo", "ModeloVehiculo")
                        .WithMany()
                        .HasForeignKey("ModeloVehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiMaVeh.Domain.Models.PresionNeumatico", "PresionNeumatico")
                        .WithMany()
                        .HasForeignKey("PresionNeumaticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModeloVehiculo");

                    b.Navigation("PresionNeumatico");
                });

            modelBuilder.Entity("SiMaVeh.DataAccess.Model.Relations.ModeloVehiculoRepuesto", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.ModeloVehiculo", "ModeloVehiculo")
                        .WithMany()
                        .HasForeignKey("ModeloVehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiMaVeh.Domain.Models.Repuesto", "Repuesto")
                        .WithMany()
                        .HasForeignKey("RepuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModeloVehiculo");

                    b.Navigation("Repuesto");
                });

            modelBuilder.Entity("SiMaVeh.DataAccess.Model.Relations.ReparadorEntidadReparadora", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.EntidadReparadora", "EntidadReparadora")
                        .WithMany()
                        .HasForeignKey("EntidadReparadoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiMaVeh.Domain.Models.Reparador", "Reparador")
                        .WithMany()
                        .HasForeignKey("ReparadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntidadReparadora");

                    b.Navigation("Reparador");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Direccion", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadId");

                    b.Navigation("Localidad");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.EntidadReparadora", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Direccion", "Direccion")
                        .WithMany()
                        .HasForeignKey("DireccionId");

                    b.HasOne("SiMaVeh.Domain.Models.TipoEntidadReparadora", "TipoEntidadReparadora")
                        .WithMany()
                        .HasForeignKey("TipoEntidadReparadoraId");

                    b.Navigation("Direccion");

                    b.Navigation("TipoEntidadReparadora");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.FuenteEnergia", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId");

                    b.HasOne("SiMaVeh.Domain.Models.TipoFuenteEnergia", "TipoFuenteEnergia")
                        .WithMany()
                        .HasForeignKey("TipoFuenteEnergiaId");

                    b.Navigation("Marca");

                    b.Navigation("TipoFuenteEnergia");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.GrupoModelo", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Localidad", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Partido", "Partido")
                        .WithMany("Localidades")
                        .HasForeignKey("PartidoId");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Mantenimiento", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Moneda", "MonedaMontoRecambio")
                        .WithMany()
                        .HasForeignKey("MonedaMontoRecambioId");

                    b.HasOne("SiMaVeh.Domain.Models.Recambio", "Recambio")
                        .WithMany()
                        .HasForeignKey("RecambioId");

                    b.HasOne("SiMaVeh.Domain.Models.Reparador", "Reparador")
                        .WithMany()
                        .HasForeignKey("ReparadorId");

                    b.HasOne("SiMaVeh.Domain.Models.ServicioReparador", "ServicioReparador")
                        .WithMany("Mantenimientos")
                        .HasForeignKey("ServicioReparadorId");

                    b.Navigation("MonedaMontoRecambio");

                    b.Navigation("Recambio");

                    b.Navigation("Reparador");

                    b.Navigation("ServicioReparador");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.ModeloVehiculo", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.EquipamientoAirbags", "Airbags")
                        .WithMany()
                        .HasForeignKey("AirbagsId");

                    b.HasOne("SiMaVeh.Domain.Models.GrupoModelo", "GrupoModelo")
                        .WithMany()
                        .HasForeignKey("GrupoModeloId");

                    b.HasOne("SiMaVeh.Domain.Models.TipoFuenteEnergia", "TipoFuenteEnergia")
                        .WithMany()
                        .HasForeignKey("TipoFuenteEnergiaId");

                    b.Navigation("Airbags");

                    b.Navigation("GrupoModelo");

                    b.Navigation("TipoFuenteEnergia");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Neumatico", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Partido", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Provincia", "Provincia")
                        .WithMany("Partidos")
                        .HasForeignKey("ProvinciaId");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.PeriodicidadMantenimiento", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.ModeloVehiculo", "ModeloVehiculo")
                        .WithMany()
                        .HasForeignKey("ModeloVehiculoId");

                    b.HasOne("SiMaVeh.Domain.Models.Repuesto", "Repuesto")
                        .WithMany("PeriodicidadesMantenimiento")
                        .HasForeignKey("RepuestoId");

                    b.Navigation("ModeloVehiculo");

                    b.Navigation("Repuesto");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Persona", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.PresionNeumatico", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Neumatico", "Neumatico")
                        .WithMany()
                        .HasForeignKey("NeumaticoId");

                    b.Navigation("Neumatico");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Provincia", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Pais", "Pais")
                        .WithMany("Provincias")
                        .HasForeignKey("PaisId");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Recambio", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.ServicioReparador", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.EntidadReparadora", "EntidadReparadora")
                        .WithMany("ServiciosReparadores")
                        .HasForeignKey("EntidadReparadoraId");

                    b.HasOne("SiMaVeh.Domain.Models.Moneda", "MonedaMontoManoObra")
                        .WithMany()
                        .HasForeignKey("MonedaMontoManoObraId");

                    b.HasOne("SiMaVeh.Domain.Models.Vehiculo", "Vehiculo")
                        .WithMany("ServiciosReparadores")
                        .HasForeignKey("VehiculoId");

                    b.Navigation("EntidadReparadora");

                    b.Navigation("MonedaMontoManoObra");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Telefono", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Persona", "Persona")
                        .WithMany("Telefonos")
                        .HasForeignKey("PersonaId");

                    b.HasOne("SiMaVeh.Domain.Models.TipoTelefono", "TipoTelefono")
                        .WithMany()
                        .HasForeignKey("TipoTelefonoId");

                    b.Navigation("Persona");

                    b.Navigation("TipoTelefono");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.TipoCambio", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Moneda", "MonedaDestino")
                        .WithMany()
                        .HasForeignKey("MonedaDestinoId");

                    b.HasOne("SiMaVeh.Domain.Models.Moneda", "MonedaOrigen")
                        .WithMany()
                        .HasForeignKey("MonedaOrigenId");

                    b.Navigation("MonedaDestino");

                    b.Navigation("MonedaOrigen");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Vehiculo", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.ModeloVehiculo", "ModeloVehiculo")
                        .WithMany()
                        .HasForeignKey("ModeloVehiculoId");

                    b.HasOne("SiMaVeh.Domain.Models.Usuario", "Usuario")
                        .WithMany("Vehiculos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("ModeloVehiculo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Reparador", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Persona", null)
                        .WithOne()
                        .HasForeignKey("SiMaVeh.Domain.Models.Reparador", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Usuario", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Persona", null)
                        .WithOne()
                        .HasForeignKey("SiMaVeh.Domain.Models.Usuario", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Kit", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Recambio", null)
                        .WithOne()
                        .HasForeignKey("SiMaVeh.Domain.Models.Kit", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Repuesto", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Recambio", null)
                        .WithOne()
                        .HasForeignKey("SiMaVeh.Domain.Models.Repuesto", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiMaVeh.Domain.Models.TargetMantenimiento", "TargetMantenimiento")
                        .WithMany()
                        .HasForeignKey("TargetMantenimientoId");

                    b.Navigation("TargetMantenimiento");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Aceite", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.TargetMantenimiento", null)
                        .WithOne()
                        .HasForeignKey("SiMaVeh.Domain.Models.Aceite", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Fluido", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.TargetMantenimiento", null)
                        .WithOne()
                        .HasForeignKey("SiMaVeh.Domain.Models.Fluido", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Pieza", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.TargetMantenimiento", null)
                        .WithOne()
                        .HasForeignKey("SiMaVeh.Domain.Models.Pieza", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiMaVeh.Domain.Models.UbicacionPieza", "UbicacionPieza")
                        .WithMany()
                        .HasForeignKey("UbicacionPiezaId");

                    b.Navigation("UbicacionPieza");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Automovil", b =>
                {
                    b.HasOne("SiMaVeh.Domain.Models.Vehiculo", null)
                        .WithOne()
                        .HasForeignKey("SiMaVeh.Domain.Models.Automovil", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.EntidadReparadora", b =>
                {
                    b.Navigation("ServiciosReparadores");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Pais", b =>
                {
                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Partido", b =>
                {
                    b.Navigation("Localidades");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Persona", b =>
                {
                    b.Navigation("Telefonos");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Provincia", b =>
                {
                    b.Navigation("Partidos");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.ServicioReparador", b =>
                {
                    b.Navigation("Mantenimientos");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Vehiculo", b =>
                {
                    b.Navigation("ServiciosReparadores");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("SiMaVeh.Domain.Models.Repuesto", b =>
                {
                    b.Navigation("PeriodicidadesMantenimiento");
                });
#pragma warning restore 612, 618
        }
    }
}
